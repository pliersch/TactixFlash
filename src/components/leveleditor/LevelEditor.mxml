<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 contentBackgroundColor="#FFFFFF" contentBackgroundAlpha="1.0" 
		 backgroundColor="#FFFFFF" width="100%" height="100%"
		 creationPolicy="all"
		 creationComplete="init(event)" xmlns:leveleditor="components.leveleditor.*">

	<fx:Declarations>
		<!-- Platzieren Sie nichtvisuelle Elemente (z.Â B. Dienste, Wertobjekte) hier -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flexlib.containers.DragScrollingCanvas;
			
			import mx.containers.Canvas;
			import mx.controls.Image;
			import mx.events.FlexEvent;
			
			import org.osmf.layout.AbsoluteLayoutFacet;
			
			private var rows:uint;
			private var col:uint;
			private var hoehe        :Number;
			private var breite       :Number;
			private var cos30        :Number;
			private var seitenlaenge :Number;
			private var _currentItemID:uint;
			private var fields:Array;
			private var roadMode:Boolean = false;
			private var costTxt:String;
			private var costArray:Array;
			private var roadCoord:Vector.<uint>;
			private var hexFields:Vector.<Vector.<Field>>;
			
			private function init(e:FlexEvent):void {
				okButton.addEventListener(MouseEvent.CLICK, createItem);
				townButton.addEventListener(MouseEvent.CLICK, setCurrentItem);
				woodButton.addEventListener(MouseEvent.CLICK, setCurrentItem);
				mountainBtn.addEventListener(MouseEvent.CLICK, setCurrentItem);
				waterBtn.addEventListener(MouseEvent.CLICK, setCurrentItem);
				grassBtn.addEventListener(MouseEvent.CLICK, setCurrentItem);
				roadBtn.addEventListener(MouseEvent.CLICK, setCurrentItem);
				startFieldBtn.addEventListener(MouseEvent.CLICK, setCurrentItem);
				roadBeginBtn.addEventListener(MouseEvent.CLICK, createRoad);
				roadEndBtn.addEventListener(MouseEvent.CLICK, createRoad);
				exitBtn.addEventListener(MouseEvent.CLICK, exitLevelEditor);
				getFieldCoordBtn.addEventListener(MouseEvent.CLICK, getFieldCoord);
				addEventListener("openNA0",openNA0);
				addEventListener("openNA1",openNA1);
				addEventListener("openNA2",openNA2);
				addEventListener("openNA3",openNA3);
				addEventListener("openNA4",openNA4);
				addEventListener("openNA5",openNA5);
				addEventListener("openSA0",openSA0);
				addEventListener("openSA1",openSA1);
				addEventListener("openSA2",openSA2);
				addEventListener("openAF0",openAF0);
				addEventListener("openAF1",openAF1);
				addEventListener("openAF2",openAF2);
				addEventListener("openAF3",openAF3);
				addEventListener("openAF4",openAF4);
				addEventListener("openEU0",openEU0);
				addEventListener("openEU1",openEU1);
				addEventListener("openAS0",openAS0);
				addEventListener("openAS1",openAS1);
				addEventListener("openAS2",openAS2);
				addEventListener("openAS3",openAS3);
				addEventListener("openAS4",openAS4);
				addEventListener("openAS5",openAS5);
				addEventListener("openAS6",openAS6);
				addEventListener("openAS7",openAS7);
				addEventListener("openAS8",openAS8);
				addEventListener("openAUS0",openAUS0);
				addEventListener("openAUS1",openAUS1);
				addEventListener("openAUS2",openAUS2);
				hoehe               = Pref.BATTLEFIELD_HOEHE;
				breite              = Pref.BATTLEFIELD_BREITE;
				cos30               = Math.cos(30*Math.PI/180);
				seitenlaenge        = hoehe/cos30/2;
				costTxt = "2.2.2.2.2.20.2.2.20.20.2.2.2.2.2.2.1.1.2.2.2.2.2.2.2.20.20.2.20.2.2.2.2.2.2.2.1.1.2.2.2.2.2.2.2.2.2." +
					"2.20.20.2.2.2.2.2.2.2.2.1.1.2.2.2.2.2.2.2.20.2.20.20.2.2.2.2.2.2.2.2.1.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2." +
					"2.2.2.2.2.2.2.2.2.20.2.20.1.1.2.2.2.2.2.2.2.2.2.1.2.2.2.2.20.20.20.20.20.2.1.1.2.2.2.2.2.2.2.2.1.1.2.2.2.20." +
					"20.2.20.20.1.1.2.2.2.2.2.2.2.2.1.2.1.2.2.2.2.2.2.2.2.2.1.1.2.2.2.2.2.2.2.1.2.2.1.2.2.2.2.2.2.2.2.1.2.2.2.2.2" +
					".2.2.1.2.2.2.1.2.2.2.2.2.2.2.2.2.1.2.2.2.2.2.2.2.2.2.2.2.1.1.2.2.2.2.2.2.2.1.2.2.2.2.2.2.1.2.2.2.2.1.1.20.2" +
					".2.2.2.2.2.2.1.2.2.2.2.2.2.2.2.2.2.1.1.20.20.2.2.2.2.2.2.1.2.2.2.2.2.1.2.2.2.2.1.1.2.20.20.2.2.2.2.2.2.1.2.2" +
					".2.2.2.1.2.2.2.2.1.2.2.20.2.2.2.2.2.2.1.2.2.2.2.1.1.2.2.2.2.2.2.2.2.20.2.2.2.2.2.2.1.2.2.2.1.1.2.2.2.2.2.2.2" +
					".2.20.2.2.2.2.2.2.2.2.2.1.1.1.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.1.2.2.1.2.2.2.2.2.2.2.2.2.2.20.2.2.2.2.2.2.1.2.1" +
					".2.2.1.2.2.2.2.3.2.2.2.2.20.2.2.2.2.2.1.1.1.2.2.2.2.2.2.2.3.2.2.2.2.20.2.2.2.2.2.1.1.2.2.2.1.2.2.2.3.3.2.2.2" +
					".2.2.20.2.2.2.2.1.1.2.2.2.2.2.2.2.3.3.2.2.2.2.2.2.2.2.2.1.1.2.2.2.2.1.2.2.3.3.3.2.2.2.2.2.20.2.2.2.1.2.2.2.2" +
					".2.2.2.2.2.3.3.2.2.2.2.2.20.2.2.1.2.2.2.2.2.2.1.2.2.3.3.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.3.3.2.2.2.2.2.2" +
					".20.2.2.1.2.2.2.2.2.2.1.2.3.3.3.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.3.3.3.2.2.2.2.2.2.20.2.2.1.2.2.2.2.2.2.1.2" +
					".3.3.2.2.2.2.2.2.2.20.2.2.2.2.2.2.2.2.2.2.2.3.3.3.2.2.2.2.2.2.2.2.2.1.2.2.2.2.2.2.1.2.3.3.2.2.2.2.2.2.2.20.2.2" +
					".1.2.2.2.2.2.2.2.2.2.3.3.2.2.2.2.2.2.2.2.1.2.2.2.2.2.2.2.1.2.2.3.2.2.2.2.2.2.2.20.2.1.1.2.2.2.2.2.2.1.1.1.2.2.2" +
					".2.20.2.2.2.2.2.1.1.2.2.2.2.1.1.2.1.1.2.2.20.20.20.20.20.20.20.2.1.1.2.2.2.2.1.1.2.2.1.2.2.20.20.2.20.20.20.2.2" +
					".1.1.1.1.1.1.2.2.2.1.1.2.20.2.2.2.2.2.2.2.3.1.1.1.1.1.1.20.20.20.20.2.2.20.2.2.2.2.2.2.3.1.2.2.2.2.2.2.20.20.20" +
					".20.20.20.2.2.2.2.2.2.2.2.1.3.3.3.2.2.2.20.2.2.2.20.20.2.2.1.1.2.2.2.1.3.3.3.3.3.2.2.2.2.2.2.2.2.2.2.1.1.1.1.2.1" +
					".3.3.3.3.3.3.2.20.2.2.2.2.2.2.2.1.1.1.1.1.2.2.3.3.3.3.2.2.2.2.2.2.2.2.2.2.1.1.2.2.1.2.2.2.2.2.3.2.2.20.2.2.2.2.2" +
					".2.2.1.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.20.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2" +
					".20.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.20.2.2.2.2.2.2.2.2.2.2.3.2.2.2.2.2.2.2.2.20.2.2.2.2.2.2.2.2.2.2.2.3.3" +
					".2.2.2.2.2.2.20.20.2.2.2.2.2.2.2.2.2.2.3.3.3.2.2.3.3.3.20.20.2.2.2.2.2.2.2.2.2.2.2.3.3.3.3.2.3.3.3.20.2.2.2.2.2.2.2.2.2.2.2.";
				
				
				roadCoord = new Vector.<uint>;
				costArray = costTxt.split(".");
				var elements:Dictionary = new Dictionary();
				elements['1'] = "Alaska.jpg";
				
				for(var i:uint=0;i<27;i++){
					var region:Region = new Region();
					regionsWindow.addTab(("Region " + (i+1)),region);
				}
			}
			
			private function createItem(e:MouseEvent):void {
				var field:Field;
				rows=uint(rowsTxt.text);
				col=uint(colsTxt.text);
				hexFields=new Vector.<Vector.<Field>>(rows);
				
				for (var n:uint=0; n < rows; n++) {
					hexFields[n]=new Vector.<Field>(col);
				}
				
				for (var j:uint=0; j < rows; j++) {
					for (var i:uint=0; i < col; i++) {
						var container:Sprite = new Sprite();
						field=new Field(this, i, j);
						field.cost = costArray[(j * rows + i)];
						if(field.cost == 1)	 field.setItem(Field.ROAD_ID);
						if(field.cost == 2)	 field.setItem(Field.GRASS_ID);
						if(field.cost == 3)	 field.setItem(Field.MOUNTAIN_ID);
						if(field.cost == 20) field.setItem(Field.WATER_ID);
						container.addChild(field);
						hexFields[j][i]= field;
						field.x=i * breite + i * seitenlaenge + (j % 2) * (breite - seitenlaenge / 2);
						field.y=j * hoehe / 2;
						hexFields[j][i].addEventListener(MouseEvent.CLICK, hexfieldClicked);
						var region:Region = regionsWindow.tabNavi.selectedChild as Region;
						region.addFields(container);
					}
				}
				
				for (j=0; j < rows; j++) {
					for (i=0; i < col; i++) {
						field=hexFields[j][i];
						field.cost = costArray[(j * col + i)];
						if(field.cost == 1)	 field.setItem(Field.ROAD_ID);
						if(field.cost == 2)	 field.setItem(Field.GRASS_ID);
						if(field.cost == 3)	 field.setItem(Field.MOUNTAIN_ID);
						if(field.cost == 20) field.setItem(Field.WATER_ID);
						container.addChild(field);
					}
				}
				createRoads((regionsWindow.tabNavi.selectedChild as Region).streetContainer);
			}
			
			private function createRoads(canvas:Canvas):void {
				var roadCoord:Array = new Array();
				roadCoord.push("761.264.761.328.1149.552.1149.744.983.840.983.1032.927.1064.927.1192.483.1448.372.1384.317.1416.261.1384.206.1352.95.1416");
				roadCoord.push("927.1192.1038.1256.1094.1224.1149.1256.1205.1224.1260.1256.1315.1224.1371.1256.1537.1160.1593.1192.1759.1096.1926.1192");
				roadCoord.push("1759.584.1648.520.1260.744.1205.712.1149.744");
				roadCoord.push("1759.1096.1759.584");
				roadCoord.push("1648.520.1648.328.1870.200.2259.424");
				var r1:Array = roadCoord[0].split(".");
				var r2:Array = roadCoord[1].split(".");
				var r3:Array = roadCoord[2].split(".");
				var r4:Array = roadCoord[3].split(".");
				var r5:Array = roadCoord[4].split(".");
				var rAll:Array = new Array();
				rAll.push(r1);
				rAll.push(r2);
				rAll.push(r3);
				rAll.push(r4);
				rAll.push(r5);
				var all:Vector.<Vector.<uint>> = new Vector.<Vector.<uint>>();
				for(var j:uint=0;j<rAll.length;j++){
					for(var n:uint=0;n<rAll[j].lenght;n++){
						all[j][n] = rAll[j][n];
					}
				}
				var sprite:Sprite = new Sprite();
				for (var i:uint=0;i<all.length;i++){
					drawWay(canvas,all[i]);
				}	
			}
			
			private function getFieldCoord(e:MouseEvent):void {
				fieldOutput.text = "";
				for (var j:uint=0; j < rows; j++) {
					for (var i:uint=0; i < col; i++) {
						fieldOutput.text += hexFields[j][i].typ + "."; 
					}
				}
			}
			
			public function hexfieldClicked(e:MouseEvent):void{
				//roadCoord = new Vector.<uint>;
				if(roadMode){
					var field:Field = e.target.parent as Field;
					roadCoord.push(field.x + 40);
					roadCoord.push(field.y + 40);
					drawWay((regionsWindow.tabNavi.selectedChild as Region).streetContainer,roadCoord);
				}
			}
			
			public function createRoad(e:MouseEvent):void{
				roadMode = !roadMode;
			}
			
			public function drawWay(canvas:Canvas, coord:Vector.<uint>):void{
				var length:uint = coord.length;
				var sprite:Sprite = new Sprite();
				sprite.graphics.lineStyle(5,0,0.9,false,LineScaleMode.NORMAL,CapsStyle.NONE,JointStyle.ROUND,1);
				sprite.graphics.moveTo(coord[0],coord[1]);
				for(var i:uint=2;i<length;i+=2){
					sprite.graphics.lineTo(coord[i],coord[i+1]);
				}
				canvas.rawChildren.addChild(sprite);
			}
			
			private function getCoord(e:MouseEvent):void {
				var length:uint=roadCoord.length;
				roadOutput.text = "";
				for(var i:uint=0;i<length;i++){
					roadOutput.text += roadCoord[i] + ".";
				}
				roadCoord = new Vector.<uint>();
			}
						
			public function setCurrentItem(e:MouseEvent):void {
				var button:Button = e.target as Button;
				if(button == townButton) _currentItemID = Field.TOWN_ID;
				else if(button == woodButton) _currentItemID = Field.WOOD_ID;
				else if(button == mountainBtn) _currentItemID = Field.MOUNTAIN_ID;
				else if(button == waterBtn) _currentItemID = Field.WATER_ID;
				else if(button == grassBtn) _currentItemID = Field.GRASS_ID;
				else if(button == roadBtn) _currentItemID = Field.ROAD_ID;
				else if(button == startFieldBtn) _currentItemID = Field.START_ID;
			}
			
			private function openNA0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 0;
			}
			private function openNA1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 1;
			}
			private function openNA2(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 2;
			}
			private function openNA3(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 3;
			}
			private function openNA4(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 4;
			}
			private function openNA5(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 5;
			}
			private function openSA0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 6;
			}
			private function openSA1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 7;
			}
			private function openSA2(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 8;
			}
			private function openAF0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 9;
			}
			private function openAF1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 10;
			}
			private function openAF2(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 11;
			}
			private function openAF3(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 12;
			}
			private function openAF4(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 12;
			}
			private function openEU0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 14;
			}
			private function openEU1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 15;
			}
			private function openAS0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 16;
			}
			private function openAS1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 17;
			}
			private function openAS2(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 18;
			}
			private function openAS3(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 19;
			}
			private function openAS4(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 20;
			}
			private function openAS5(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 21;
			}
			private function openAS6(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 22;
			}
			private function openAS7(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 23;
			}
			private function openAS8(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 24;
			}
			private function openAUS0(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 25;
			}
			private function openAUS1(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 26;
			}
			private function openAUS2(e:Event):void{
				regionsWindow.tabNavi.selectedIndex = 27;
			}
			
			public function getCoordinates(x:uint, y:uint):void {
				fieldOutput.text=x + " " + y;
			}
			
			public function get currentItemID():uint {
				return _currentItemID;
			}
			private function exitLevelEditor(e:MouseEvent):void{
				dispatchEvent(new Event("toLobbyEvent",true));
			}
		]]>
	</fx:Script>

	
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>
	<s:Group width="200" height="100%">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<mx:Accordion y="52" width="196" height="260">
			<s:NavigatorContent label="Typ">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<mx:Button  label="Town" id="townButton"/>
				<mx:Button  label="Wood" id="woodButton"/>
				<mx:Button  label="Mountain" id="mountainBtn"/>
				<mx:Button  label="Water" id="waterBtn"/>
				<mx:Button  label="Grass" id="grassBtn"/>
				<mx:Button  label="Road" id="roadBtn"/>
				<mx:Button label="Start" id="startFieldBtn"/>
				<mx:Button label="OK" id="getFieldCoordBtn"/>
			</s:NavigatorContent>
			<s:NavigatorContent label="Road">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<mx:Button label="Begin" id="roadBeginBtn"/>
				<mx:Button label="End" id="roadEndBtn" click="getCoord(event)"/>
			</s:NavigatorContent>
		</mx:Accordion>
		<mx:Form paddingLeft="10" paddingTop="0" paddingBottom="0" borderVisible="false">
			<mx:FormItem label="Rows" width="120">
				<s:TextInput width="70" id="rowsTxt"/>
			</mx:FormItem>
			<mx:FormItem label="Columns" width="120">
				<s:TextInput width="70" id="colsTxt"/>
			</mx:FormItem>
		</mx:Form>
		<mx:Button label="Ok" id="okButton"/>
		<leveleditor:RegionChooser/>

		<mx:Text text="Output" width="100%" height="63" id="fieldOutput"/>
		<mx:Text text="Output" width="100%" height="63" id="roadOutput"/>
		<mx:Button label="Exit" id="exitBtn"/>
	</s:Group>
	<leveleditor:RegionsWindow id="regionsWindow" width="100%" height="100%"/>
</s:Panel>
